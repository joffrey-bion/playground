[versions]

config4k = "0.6.0"
gson = "2.10.1"
hcl4j = "0.7.3"
hibernate = "6.2.4.Final"
jackson = "2.18.1"
java-websocket = "1.5.7"
kotlin = "2.0.21"
kotlinx-atomicfu = "0.26.0"
kotlinx-coroutines = "1.9.0"
kotlinx-serialization = "1.7.3"
krossbow = "8.0.0"
ktoml = "0.5.2"
ktor = "3.0.1"
mockk = "1.13.13"
okhttp = "4.11.0"
okio = "3.9.1"
slf4j = "2.0.16"
spring-data = "3.3.5"
tomlj = "1.1.1"

[libraries]

config4k = { module = "io.github.config4k:config4k", version.ref = "config4k" }
gson = { module = "com.google.code.gson:gson", version.ref = "gson" }
hcl4j = { module = "com.bertramlabs.plugins:hcl4j", version.ref = "hcl4j" }
hibernate-search = { module = "org.hibernate.search:hibernate-search-mapper-orm-orm6", version.ref = "hibernate" }
jackson-bom = { module = "com.fasterxml.jackson:jackson-bom", version.ref = "jackson" }
jackson-core = { module = "com.fasterxml.jackson.core:jackson-core" }
jackson-module-kotlin = { module = "com.fasterxml.jackson.module:jackson-module-kotlin" }
java-websocket = { module = "org.java-websocket:Java-WebSocket", version.ref = "java-websocket" }
kotlinx-atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "kotlinx-atomicfu" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines" }
kotlinx-coroutines-test = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-test", version.ref = "kotlinx-coroutines" }
kotlinx-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "kotlinx-serialization" }
kotlinx-serialization-hocon = { module = "org.jetbrains.kotlinx:kotlinx-serialization-hocon", version.ref = "kotlinx-serialization" }
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlinx-serialization" }
krossbow-websocket-ktor = { module = "org.hildan.krossbow:krossbow-websocket-ktor", version.ref = "krossbow" }
ktoml-core = { module = "com.akuleshov7:ktoml-core", version.ref = "ktoml" }
ktor-client-cio = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-client-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-client-darwin = { module = "io.ktor:ktor-client-darwin", version.ref = "ktor" }
ktor-client-java = { module = "io.ktor:ktor-client-java", version.ref = "ktor" }
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor" }
ktor-client-okhttp = { module = "io.ktor:ktor-client-okhttp", version.ref = "ktor" }
ktor-client-websockets = { module = "io.ktor:ktor-client-websockets", version.ref = "ktor" }
ktor-client-winhttp = { module = "io.ktor:ktor-client-winhttp", version.ref = "ktor" }
ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
okhttp = { module = "com.squareup.okhttp3:okhttp", version.ref = "okhttp" }
okio = { module = "com.squareup.okio:okio", version.ref = "okio" }
slf4j-simple = { module = "org.slf4j:slf4j-simple", version.ref = "slf4j" }
spring-data-commons = { module = "org.springframework.data:spring-data-commons", version.ref = "spring-data" }
tomlj = { module = "org.tomlj:tomlj", version.ref = "tomlj" }

[plugins]
kotlin-jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
kotlin-multiplatform = { id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
kotlinx-serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
